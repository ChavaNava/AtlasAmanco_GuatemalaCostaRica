<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolStripMenuItem1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEASABIAAD/7gAOQWRvYmUAZAAAAAAB/+EASkV4aWYAAE1NACoAAAAIAAMBGgAF
        AAAAAQAAADIBGwAFAAAAAQAAADoBKAADAAAAAQACAAAAAAAAAEgAAAABAAAASAAAAAEAAP/tCSRQaG90
        b3Nob3AgMy4wADhCSU0D7QpSZXNvbHV0aW9uAAAAABAASAAAAAIAAgBIAAAAAgACOEJJTQQNGEZYIEds
        b2JhbCBMaWdodGluZyBBbmdsZQAAAAAEAAAAeDhCSU0EGRJGWCBHbG9iYWwgQWx0aXR1ZGUAAAAABAAA
        AB44QklNA/MLUHJpbnQgRmxhZ3MAAAAJAAAAAAAAAAABADhCSU0ECg5Db3B5cmlnaHQgRmxhZwAAAAAB
        AAA4QklNJxAUSmFwYW5lc2UgUHJpbnQgRmxhZ3MAAAAACgABAAAAAAAAAAI4QklNA/UXQ29sb3IgSGFs
        ZnRvbmUgU2V0dGluZ3MAAABIAC9mZgABAGxmZgAGAAAAAAABAC9mZgABAKGZmgAGAAAAAAABADIAAAAB
        AFoAAAAGAAAAAAABADUAAAABAC0AAAAGAAAAAAABOEJJTQP4F0NvbG9yIFRyYW5zZmVyIFNldHRpbmdz
        AAAAcAAA/////////////////////////////wPoAAAAAP////////////////////////////8D6AAA
        AAD/////////////////////////////A+gAAAAA/////////////////////////////wPoAAA4QklN
        BAALTGF5ZXIgU3RhdGUAAAACAAE4QklNBAIMTGF5ZXIgR3JvdXBzAAAAAAQAAAAAOEJJTQQIBkd1aWRl
        cwAAAAAQAAAAAQAAAkAAAAJAAAAAADhCSU0EHg1VUkwgb3ZlcnJpZGVzAAAABAAAAAA4QklNBBoGU2xp
        Y2VzAAAAAHkAAAAGAAAAAAAAAAAAAAAkAAAAJAAAAAwAUwBpAG4AIAB0AO0AdAB1AGwAbwAtADkAAAAB
        AAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAACQAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADhCSU0EERFJQ0MgVW50YWdnZWQgRmxhZwAAAAEBADhCSU0EFBdMYXllciBJRCBHZW5l
        cmF0b3IgQmFzZQAAAAQAAAACOEJJTQQMFU5ldyBXaW5kb3dzIFRodW1ibmFpbAAABUQAAAABAAAAJAAA
        ACQAAABsAAAPMAAABSgAGAAB/9j/4AAQSkZJRgABAgEASABIAAD/7gAOQWRvYmUAZIAAAAAB/9sAhAAM
        CAgICQgMCQkMEQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAz/wAARCAAkACQDASIAAhEBAxEB/90ABAAD/8QBPwAAAQUBAQEBAQEAAAAAAAAAAwABAgQF
        BgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMCBAIFBwYIBQMMMwEAAhEDBCES
        MQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKDJkSTVGRFwqN0NhfSVeJl8rOE
        w9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3x9fn9xEAAgIBAgQEAwQFBgcH
        BgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVjczTxJQYWorKDByY1wtJEk1Sj
        F2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm9ic3R1dnd4eXp7fH/9oADAMB
        AAIRAxEAPwD0zqWY7CwrMltRvcyA2oENlziK2y930GbnfpH/AOjXPY/12+ztLuuYxxGPdtqtrO8EgT6b
        2BznN/kP/P8A/Plj65dZbg4jcQN3W5Pu3To1tbmO/k7nWfQ+kuF+sdtWTQ1mPlNurraLztBEkh21h37X
        Ne2p37n+ETJ4OcOTH7UAcc4ylZr/ACfzf9xwr4ZOXEZDJKpgjTze7xPrD1bKxmZNPTWWMeJEXkET/wCg
        5Vj/AJxWVs3ZHTslju+w1ub8nPtpd/0FznSPXt6bhvpe4BtFzYbb6XvcGtpsPvr9rHfn7Lv+LWiwZZbO
        Re87SPVcbmvY8Cl/qOqqNlmzfmsr+jVVZss/R/4RVYZMhxiXueqr9Qhw8X+DGLbPL4qu4dTwXU/m+X5v
        m/wXe/a+J+y/2r7vs+zfEe/nZ6e39/1PZ9LYksv0x/zJ/wDQX1Pw9ZJT+5Lw/m+P/CavBH/n8P8Agv8A
        /9DvvrNjdLs6c+/PxBmGqG0sBLHl9jm1srZewtsqY+xzPVXnHVMjP6SAK8Wmmq9rq2MM3Nb+9rdZe93t
        d/N2v9P/AM9rrf8AGB1J2PZ0vEbtPqXG108gtLKa/d+7tvuXM9cozM0txamCw1l25wcAGuG36T37Pox+
        kWfzfMZPdhisnFHXhO3F+8Gf7vg9kZM4jHjP6uU/TfD+6f8ABS9N6kMbpdAIcbBWBQBEPcXHex3t8mfQ
        WvZdFc+G4/g5Y/R7WV4LGbw4MJAcOCB+c2fzXKxdl1em4bxMHSfFZmQ+oitiXRgLiD0IBevj/sLj/wA1
        s/8AgMpIvpu/5peltO79n7dvefRjakt/g/6HC5XF/wBK3//R7T62f80NtH/OTbPu9CPV3xpv/on6T0/6
        /wCjWJj/APjaS2N/pb9fX+1ehu9v9I9f9Bs/e+0fof8ASLxFJQz+cfze/wCl87PP/c8P535/0/8Ac3/U
        v9a/QnUv+ZX7Tt+37ftsj1Z9XbO1u2dn6D6CtU/8zfb6f2CfzZ9Ld/0/evnFJNj85/mtz8vz/wCF/WWn
        YfPsN/lfqnSPJJfKySsMT//ZOEJJTQQhGlZlcnNpb24gY29tcGF0aWJpbGl0eSBpbmZvAAAAAFUAAAAB
        AQAAAA8AQQBkAG8AYgBlACAAUABoAG8AdABvAHMAaABvAHAAAAATAEEAZABvAGIAZQAgAFAAaABvAHQA
        bwBzAGgAbwBwACAANgAuADAAAAABADhCSU0EBgxKUEVHIFF1YWxpdHkAAAAABwAEAAAAAQEA/9sAQwAG
        BAQEBQQGBQUGCQYFBgkLCAYGCAsMCgoLCgoMEAwMDAwMDBAMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwM/9sAQwEHBwcNDA0YEBAYFA4ODhQUDg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwM/8AAEQgAJAAkAwERAAIRAQMRAf/EAB8AAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAH
        CAkKC//EALUQAAIBAwMCBAIGBwMEAgYCcwECAxEEAAUhEjFBUQYTYSJxgRQykaEHFbFCI8FS0eEzFmLw
        JHKC8SVDNFOSorJjc8I1RCeTo7M2F1RkdMPS4ggmgwkKGBmElEVGpLRW01UoGvLj88TU5PRldYWVpbXF
        1eX1ZnaGlqa2xtbm9jdHV2d3h5ent8fX5/c4SFhoeIiYqLjI2Oj4KTlJWWl5iZmpucnZ6fkqOkpaanqK
        mqq6ytrq+v/EAB8BAAICAwEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKC//EALURAAICAQIDBQUEBQYECAMD
        bQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJ
        ChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH
        1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/dAAQABf/aAAwDAQACEQMR
        AD8A9L+Y9YfR9GudQjtmvJYuKxWyMqc3kdY1q7bIgZuUj/Fwj5Nwf7GU6jMMUDOXKLZixmchEdXnth+d
        psIzJ5y01tLglcpa3UBEyFgOXpugZmU0DMj/AGX4v9j4fUwcPauOZI/3Ll5NBKPJNNK/MPzZqWmQ6ha+
        W4Z4JlDLwvXUgEVoQbciv+yyGHtDNkjxRxGUb/nLk0uOBozo+5Hn8w7m3gD3/lzUIpP2hCbaVK+zPLCx
        /wCAyyfaXALnjyw/zfT/AKZhHR8RqM4S/wA5N/8AF2k/4W/xL+8/R/perw4fva8uHp8a05+p8H2uHL9v
        h8WZn5iPh+J/Dw8bR4R4+DrfC//Q7L+cfnKLRtJi0pI+d1qI9QOTQIkEiMdqryaT7C/F8P2m/lbM0/Yv
        5/HOBPBH/f8A8H+llH1MDrPAnGQFl4X+Y11a6hZRw2Opx3dvAi3jcEdQzMrcUPPiyusTcuJT7UnD7War
        sn2WvDLKckfEMjiwx/hlOH1Y/wDhkuD/ADeCX1OVqO34TlERHo/i/nfiL0Hyh9fufLmjS2s7qqWV3GEj
        uhakTSKqwyH95H8KMPthJeP++80+gyxGOjKMalP+MQ/m8PV6LHlxwsTH1HFL+68b0Q4vEh9E/wDS8WP+
        syKFdXaPlfX0rFHX61I15HNFMFspPUaKIyScA96kZ4rFFIiSfAqJ6nHMzZInHIGUZDhP8cZfwfw+r/VI
        x4WnPkwmvDFH/J8OKWOcP30eGGSfBHi/wWeSMvXOPp9UuLgTT6uP+VKUp/0rPrH009bLK/wP/kj/ANO3
        T3/hH/JT/fP/0e9/mZpnlefy5Le65pC6s1twSzhVjDM0s8ixpGk6FZIkeRk9Uq32Pj4PxwntCelgZxkY
        1/N/iTDTjLIRL5z80X+u+WFVYNLs7O1vIpLeGJi93GlftUM0k7t8Lf3crtG38vD93nLx1Q1GaWQ+mcvX
        Lg/il/O/rM83s/ijISiTHf1fj+cm/lvzINO8rWSsrtcCBRYqvHjK7SHmjDiSTslOBTj9rNbKETOQIN8X
        +kekjtAb9GWz3nG3rWnEufwb+uYLeA9A4j/lS1P+/e5f9OVc7vh/wev9r/3jy9/vb/p/75//0ukf85Ae
        ZJLG48saZGEInuzdPyqCrRlIYzy7KVnmrt+yuajtgSlARHLeTu+yNJKfFkHLHX+y/wCkXmfniy1jV2TT
        LaBbh4C/qurqqxyKV2Z34ABaNzzndFEiVtOq7Z0sZyxmXqgO7i9f+pf1/wDYR/imifJ13FDoUEXqq6ws
        yrIteLAEgMtaHi32lyjVf3h97tdITPFGRHDYR17q1qLeRRKvLi1BUVqa5QAXIe0fV5P+VS/V+B9T9Aen
        6dDXl9Tpxp1z0Ph9FeTyF+q/N//T7P8Amz/yqHhYf8rA4cvj+o0+tetx25/7yfvPT6fb/d8spzcH8TtO
        zfzdn8vxf0uXB/ncfoYXp/8A0LRzjp631T1vj+ufpX6l6vw/70ev+44fzfWP3PH+8zFx/luPbh4nC1t/
        mP3nh/mOH+HwvE/o/wB1/lP+lnB/QZZ5j/5Up/ie5/Tfpfprkn1nl9b9PlwXjXh+4+xxr/w3xZHJ+U8Q
        8fBx/wAXF+OFth4/AOHi4U0sv+VNUT6v+guW3Dn9V517fb+OuX4vy/8AB4f+bwtU/F/i4vtZr8PHtxp9
        FMy2h//Z
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>130, 17</value>
  </metadata>
  <metadata name="Timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>220, 17</value>
  </metadata>
  <metadata name="Timer3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>310, 17</value>
  </metadata>
  <metadata name="StatusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>400, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>79</value>
  </metadata>
</root>